pipeline {
    agent {
        label 'srv_docker'
    }

    stages {
        stage('Clean') {
            steps {
                dir('/docker/deployment') {
                    script {
                        sh 'rm -rf *'
                    }
                }
            }
        }
        
        stage('Download Repository') {
            steps {
                dir('/docker/deployment') {
                    script {
                        checkout scmGit(branches: [[name: '*/main']], extensions: [], userRemoteConfigs: [[credentialsId: 'jenkins_token', url: 'https://github.com/LksDP/devops_examen.git']])
                    }
                }
            }
        }
        
        stage('Stop Deployment') {
            steps {
                dir('/docker/deployment/deployment') {
                    script {
                        try {
                            sh 'docker-compose down'
                        } catch (Exception e) {
                            // Manejar el error aquí si es necesario
                            echo "Hubo un error al detener el despliegue: ${e.message}"
                        } finally {
                            // Asegurarse de que el pipeline continúe independientemente de si hubo un error o no
                            echo "Continuando con el siguiente paso..."
                            try {
                                sh 'docker rmi -f $(docker images -q)'
                            } catch (Exception e) {
                                // Manejar el error aquí si es necesario
                                echo "Hubo un error al eliminar las imágenes: ${e.message}"
                            }
                        }
                    }
                }
            }
        }
        
        stage('Build and image') {
            steps {
                dir('/docker/deployment/deployment') {
                    script {
                        sh "docker build ../ -f Dockerfile --target python_base -t dev:1.0"
                        //sh 'docker-compose up -d'
                    }
                }
            }
        }
        
        stage('Deployment') {
            steps {
                dir('/docker/deployment/deployment') {
                    script {
                        sh 'docker-compose up -d'
                    }
                }
            }
        }
    }
}
